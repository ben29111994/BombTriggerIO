using System.Collections.Generic;
using System.Collections;
using UnityEngine;
using UnityEngine.UI;

public class Bot : MonoBehaviour
{
    public GameObject player;
    Vector3 dir;
    float speed = 7;
    string randomName;
    bool isTurn = true;
    bool isHitWall = false;
    bool isMeetBomb = false;
    bool isNamed = false;
    bool isSpawnSkin = false;
    public Color botColor;
    int botKillCount = 0;
    public GameObject info;
    public Text botName;
    public Image botFlag;
    Quaternion infoRot;
    Vector3 infoScale;
    public int botTotalScore;
    public Spawner spawner;
    Vector3 look;

    private void Awake()
    {
        infoRot = info.transform.rotation;
        infoScale = info.transform.localScale;
        player = GameObject.FindGameObjectWithTag("Player");
    }

    void OnEnable()
    {
        spawner = GameObject.FindGameObjectWithTag("Spawner").GetComponent<Spawner>();
        botTotalScore = 0;
        if (!isNamed)
        {
            RandomNameGenerator();
            isNamed = true;
        }
        name = randomName;
        botName.text = name;    
        StartCoroutine(delayInit());
        StartInvoke(0);
    }

    IEnumerator delayInit()
    {
        yield return new WaitForSeconds(0.5f);
        try
        {
            Transform skin = null;
            skin = transform.GetChild(1);
            var getColor = skin.transform.GetChild(0);
            botColor = getColor.GetComponent<Renderer>().material.color;
        }
        catch { }
    }

    void Update()
    {
        speed = Mathf.Clamp(7.5f + transform.localScale.x / 2, 8f, 9f);
        look = dir - transform.position;
        float angle = Quaternion.Angle(transform.rotation, Quaternion.LookRotation(look));
        angle = Mathf.Abs(angle);
        if (angle > 180)
        {
            var decision = Random.Range(0, 10);
            if (decision > 1 && !isHitWall && !isMeetBomb)
            {
                isTurn = false;
            }
            else
            {
                isTurn = true;
            }
        }
        else
        {
            isTurn = true;
        }
        if (isTurn && dir != Vector3.zero && Vector3.Distance(dir, transform.position) > transform.localScale.x + 2 && Vector3.Distance(look, transform.position) > transform.localScale.x + 2)
        {
            var targetRot = Quaternion.LookRotation(look);
            var modTargetRot = targetRot;
            modTargetRot.x = 0;
            targetRot = modTargetRot;
            transform.rotation = Quaternion.RotateTowards(transform.rotation, targetRot, Time.deltaTime * 720);
        }
    }

    private void FixedUpdate()
    {
        transform.Translate(Vector3.forward * Time.deltaTime * speed);
    }

    private void LateUpdate()
    {
        info.transform.rotation = infoRot;
        info.transform.localScale = new Vector3(infoScale.x / transform.localScale.x, infoScale.y / transform.localScale.y, infoScale.z / transform.localScale.z);
    }

    public void RandomDir()
    {
        if (spawner.bombList.Count > 0)
        {
            dir = spawner.bombList[Random.Range(0, spawner.bombList.Count)].transform.position;
        }
        else
            dir = new Vector3(Random.Range(-30, 30), transform.position.y, Random.Range(-30, 30));
    }

    public void ChangeDir(Vector3 target)
    {
        dir = target;
    }

    public void CheckWall(bool checkWall)
    {
        isHitWall = checkWall;
    }

    public void MeetBomb(bool checkBomb)
    {
        isMeetBomb = checkBomb;
    }

    public void StartInvoke(float delayTime)
    {
        InvokeRepeating("RandomDir", delayTime, Random.Range(3, 10));
    }

    public void StopInvoke()
    {
        CancelInvoke();
    }

    public void UpdateBotKillCount(int score)
    {
        botKillCount++;
        botTotalScore += score;
    }

    private void OnCollisionEnter(Collision collision)
    {
        if (collision.gameObject.tag == "Bot" || collision.gameObject.tag == "Player")
        {
            Vector3 dirPush = collision.transform.position - transform.position;
            dirPush *= transform.localScale.x * 50;
            dirPush = new Vector3(Mathf.Clamp(dirPush.x, -80, 80), 0, Mathf.Clamp(dirPush.z, -80, 80));
            collision.gameObject.GetComponent<Rigidbody>().AddForce(dirPush);
        }

        if (collision.gameObject.tag == "Dot")
        {
            Vector3 dirPush = collision.transform.position - transform.position;
            dirPush *= transform.localScale.x * 3;
            dirPush = new Vector3(Mathf.Clamp(dirPush.x, -3, 3), 0, Mathf.Clamp(dirPush.z, -3, 3));
            collision.gameObject.GetComponent<Rigidbody>().AddForce(dirPush);
        }

        if (collision.gameObject.tag == "MovingBomb")
        {
            collision.gameObject.GetComponent<Rigidbody>().isKinematic = false;
            Vector3 dirPush = collision.transform.position - transform.position;
            dirPush *= 2500 * transform.localScale.x;
            dirPush = new Vector3(Mathf.Clamp(dirPush.x, -5000, 5000), 0, Mathf.Clamp(dirPush.z, -5000, 5000));
            collision.gameObject.GetComponent<Rigidbody>().AddForce(dirPush);
            float torque;
            if (dirPush.x > dirPush.z)
            {
                torque = dirPush.x;
            }
            else
            {
                torque = dirPush.z;
            }
            collision.gameObject.GetComponent<Rigidbody>().AddTorque(new Vector3(0, torque, 0));

            StartInvoke(0);
            GetComponentInChildren<BotSight>().ChangeStatus(false);
        }

        if (collision.gameObject.tag == "Wall")
        {
            Vector3 dirPush = transform.position - collision.contacts[0].point;
            dirPush *= 150;
            dirPush = new Vector3(Mathf.Clamp(dirPush.x, -150, 150), 0, Mathf.Clamp(dirPush.z, -150, 150));
            GetComponent<Rigidbody>().AddForce(dirPush);

            StopInvoke();
            isHitWall = true;
            ChangeDir(new Vector3(Random.Range(-10, 10), 1, Random.Range(-10, 10)));
            StartInvoke(0.5f);
        }
    }

    private void OnCollisionExit(Collision collision)
    {
        if (collision.gameObject.tag == "Wall")
        {
            isHitWall = false;
        }
    }

    void RandomNameGenerator()
    {
        string[] nameComponent1 = new string[] { "CS2D rocks!",
"PlayWithWheel",
"PlayWithPentablet",
"PlayWithJoystick",
"PlayWithOculusRift",
"D0om",
"L0lz0r",
"ROFLCopter",
"ZOMG",
"WTF",
"0_o",
"pwn3d",
"pwner0r",
"0wn4ge",
"no0b",
"Player",
"Master of Disaster",
"Gun",
"MyAss",
"Carnage",
"Jack",
"Tom",
"Pete",
"Rob",
"Steve",
"Chris",
"Jon",
"Bloodlord",
"Mr Mafia",
"The Bullet",
"Mac Man",
"Uber AI",
"Uber Killer",
"Executor",
"Assassin",
"Cutthroat",
"Slayer",
"Gladiator",
"Rogue",
"Trooper",
"Soldier",
"Infernal",
"Feuersturm",
"Der Vollstrecker",
"Keksmeister",
"I Killer",
"Linux Lover",
"Ping of Death",
"lawlz",
"LUL",
"l0rl",
"fucktard",
"CS2D.com",
"USGN.de",
"-_-",
"m00h",
"yeah",
"WAR!",
"Deagle Master",
"HE Overkill",
"Nightblaster",
"Starfish",
"Blowball",
"Supreme",
"AgainstCheaters",
"TheMachine",
"Circuit",
"Scrap",
"Drone",
"Robo",
"NoIntelligence",
"Cheater_Little",
"Hacker_Little",
"Stack Overflow",
"Albert",
"Allen",
"Bert",
"Bob",
"Cecil",
"Clarence",
"Elliot",
"Elmer",
"Ernie",
"Eugene",
"Fergus",
"Ferris",
"Frank",
"Frasier",
"Fred",
"George",
"Graham",
"Harvey",
"Irwin",
"Larry",
"Lester",
"Marvin",
"Neil",
"Niles",
"Oliver",
"Opie",
"Ryan",
"Toby",
"Ulric",
"Ulysses",
"Uri",
"Waldo",
"Wally",
"Walt",
"Wesley",
"Yanni",
"Yogi",
"Yuri",
"111111",
"123456",
"12345678",
"abc123",
"abramov",
"account",
"accounting",
"ad",
"adm",
"admin",
"administrator",
"adver",
"advert",
"advertising",
"afanasev",
"agafonov",
"agata",
"aksenov",
"aleksander",
"aleksandrov",
"alekse",
"alenka",
"alexe",
"alexeev",
"alla",
"anatol",
"andre",
"andreev",
"andrey",
"anna",
"anya",
"ao",
"aozt",
"arhipov",
"art",
"avdeev",
"avto",
"bank",
"baranov",
"Baseball",
"belousov",
"bill",
"billing",
"blinov",
"bobrov",
"bogdanov",
"buh",
"buhg",
"buhgalter",
"buhgalteria",
"business",
"bux",
"catchthismail",
"company",
"contact",
"contactus",
"corp",
"design",
"dir",
"director",
"direktor",
"dragon",
"economist",
"edu",
"email",
"er",
"expert",
"export",
"fabrika",
"fin",
"finance",
"ftp",
"glavbuh",
"glavbux",
"glbuh",
"helloitmenice",
"help",
"holding",
"home",
"hr",
"info",
"ingthisleter",
"job",
"john",
"kadry",
"letmein",
"mail",
"manager",
"marketing",
"marketing",
"mike",
"mogggnomgon",
"monkey",
"moscow",
"mysql",
"office",
"ok",
"oracle",
"password",
"personal",
"petgord34truew",
"post",
"postmaster",
"pr",
"qwerty",
"rbury",
"reklama",
"root",
"root",
"sale",
"sales",
"secretar",
"sekretar",
"support",
"test",
"testing",
"thisisjusttestletter",
"trade",
"uploader",
"user",
"webmaster",
"www-data",
"Thomas",
"William",
"Jacob",
"Liam",
"Felix",
"Nathan",
"Samuel",
"Logan",
"Alexis",
"Noah",
"Olivier",
"Raphael",
"Gabriel",
"Emile",
"Leo",
"Charles",
"Antoine",
"Benjamin",
"Adam",
"Édouard",
"Xavier",
"Victor",
"Zack",
"Mathis",
"Jayden",
"Theo",
"Elliot",
"Zachary",
"Louis",
"James",
"Anthony",
"Alexandre",
"Lucas",
"Justin",
"Arthur",
"Tristan",
"Loïc",
"Ethan",
"Henri",
"Nolan",
"Nicolas",
"Arnaud",
"Jeremy",
"Hugo",
"Dylan",
"Laurent",
"Eli",
"Vincent",
"Isaac",
"Etienne",
"Philippe",
"Malik",
"David",
"Alex",
"Ryan",
"Maxime",
"Hubert",
"Ludovic",
"Eloi",
"Damien",
"Hayden",
"Evan",
"Zackary",
"Milan",
"Mathéo",
"Jules",
"Simon",
"Caleb",
"Rayan",
"Eliot",
"Rafael",
"Derek",
"Tyler",
"Eliott",
"Matteo",
"Jake",
"Jordan",
"Loik",
"Michael",
"Louka",
"Jackson",
"Julien",
"Leonard",
"Joshua",
"Daniel",
"Mathias",
"Emrick",
"Lyam",
"Mayson",
"Brandon",
"Mathieu",
"Rémi",
"Sam",
"Aiden",
"Alexander",
"Theodore",
"Enzo",
"Mikael",
"Christophe",
"Tommy",
"Oliver",
"George",
"Harry",
"Jack",
"Jacob",
"Noah",
"Charlie",
"Muhammad",
"Thomas",
"Oscar",
"William",
"James",
"Henry",
"Leo",
"Alfie",
"Joshua",
"Freddie",
"Archie",
"Ethan",
"Isaac",
"Alexander",
"Joseph",
"Edward",
"Samuel",
"Max",
"Daniel",
"Arthur",
"Lucas",
"Mohammed",
"Logan",
"Theo",
"Harrison",
"Benjamin",
"Mason",
"Sebastian",
"Finley",
"Adam",
"Dylan",
"Zachary",
"Riley",
"Teddy",
"Theodore",
"David",
"Toby",
"Jake",
"Louie",
"Elijah",
"Reuben",
"Arlo",
"Hugo",
"Luca",
"Jaxon",
"Matthew",
"Harvey",
"Reggie",
"Michael",
"Harley",
"Jude",
"Albert",
"Tommy",
"Luke",
"Stanley",
"Jenson",
"Frankie",
"Jayden",
"Gabriel",
"Elliot",
"Mohammad",
"Ronnie",
"Charles",
"Louis",
"Elliott",
"Frederick",
"Nathan",
"Lewis",
"Blake",
"Rory",
"Ollie",
"Ryan",
"Tyler",
"Jackson",
"Dexter",
"Alex",
"Austin",
"Kai",
"Albie",
"Caleb",
"Carter",
"Bobby",
"Ezra",
"Ellis",
"Leon",
"Roman",
"Ibrahim",
"Aaron",
"Liam",
"Jesse",
"Jasper",
"Felix",
"Jamie",
"Oliver",
"Noah",
"Liam",
"Benjamin",
"Henry",
"William",
"Logan",
"Alexander",
"Samuel",
"James",
"Mason",
"Daniel",
"Elijah",
"Ethan",
"Lucas",
"Jackson",
"Owen",
"Wyatt",
"Michael",
"Jacob",
"Gabriel",
"Isaac",
"David",
"Aiden",
"Jack",
"Carter",
"Luke",
"Matthew",
"Hunter",
"Hudson",
"Caleb",
"Andrew",
"Levi",
"Sebastian",
"Julian",
"Lincoln",
"Joseph",
"Anthony",
"Jayden",
"Grayson",
"Nathan",
"Jaxon",
"Landon",
"Asher",
"Eli",
"John",
"Joshua",
"Cooper",
"Charles",
"Connor",
"Thomas",
"Dylan",
"Ezra",
"Isaiah",
"Christopher",
"Theodore",
"Nolan",
"Ryan",
"Jonathan",
"Sawyer",
"Josiah",
"Robert",
"Austin",
"Leo",
"Aaron",
"Brayden",
"Jace",
"Parker",
"Evan",
"Mateo",
"Cameron",
"Ryder",
"Gavin",
"Easton",
"Kai",
"Adrian",
"Christian",
"Wesley",
"Jason",
"Colton",
"Elias",
"Declan",
"Silas",
"Angel",
"Ian",
"Jeremiah",
"Miles",
"Emmett",
"Jordan",
"Greyson",
"Adam",
"Jose",
"Maxwell",
"Dominic",
"Bennett",
"Xavier",
"Ryker",
"Bentley",
"Jaxson",
"Zachary",
"Gabriel",
"Adam",
"Raphael",
"Paul",
"Louis",
"Arthur",
"Alexandre",
"Victor",
"Jules",
"Mohamed",
"Lucas",
"Joseph",
"Antoine",
"Gaspard",
"Maxime",
"Augustin",
"Oscar",
"Ethan",
"Leo",
"Leon",
"Martin",
"Hugo",
"Thomas",
"Sacha",
"Noe",
"Noah",
"Clement",
"Liam",
"Rayan",
"Samuel",
"Simon",
"Yanis",
"Nathan",
"Timothée",
"Adrien",
"Axel",
"Enzo",
"Isaac",
"Camille",
"Ismael",
"Naël",
"Basile",
"Côme",
"Charles",
"David",
"Mathis",
"Nolan",
"Leonard",
"Aaron",
"Maël",
"Maxence",
"Eliott",
"Ibrahim",
"Valentin",
"Theo",
"Alexis",
"Baptiste",
"Ulysse",
"Benjamin",
"Marius",
"Youssef",
"Elias",
"Jean",
"Lucien",
"Robin",
"Felix",
"William",
"Gustave",
"Hector",
"Auguste",
"Theodore",
"Gabin",
"Edgar",
"Amir",
"Noam",
"Tom",
"Pierre",
"Ayoub",
"Kaïs",
"Ali",
"Ruben",
"Abel",
"Henri",
"Achille",
"Ilyes",
"Milo",
"Vadim",
"Evan",
"Hadrien",
"Amine",
"Daniel",
"Marceau",
"Nicolas",
"Eden",
"Moussa",
"Antonin",
"Rafael",
"Solal",
"Joshua",
"Mehdi",
"Oliver",
"William",
"Jack",
"Noah",
"Thomas",
"Harrison",
"Ethan",
"Cooper",
"James",
"Henry",
"Mason",
"Hunter",
"Liam",
"Lucas",
"Lachlan",
"Hudson",
"Alexander",
"Levi",
"Charlie",
"Samuel",
"Elijah",
"Max",
"Benjamin",
"Leo",
"Archie",
"Riley",
"Joshua",
"Harry",
"Jacob",
"Oscar",
"Ryan",
"Jaxon",
"Archer",
"Nate",
"Jackson",
"Eli",
"Lincoln",
"Xavier",
"Carter",
"George",
"Isaac",
"Sebastian",
"Tyler",
"Flynn",
"Patrick",
"Hugo",
"Connor",
"Daniel",
"Finn",
"Theodore",
"Ashton",
"Blake",
"Matthew",
"Jake",
"Michael",
"Joseph",
"Braxton",
"Jayden",
"Chase",
"Aiden",
"Edward",
"Hayden",
"Luke",
"Jordan",
"Hamish",
"Luca",
"Dominic",
"Harvey",
"Parker",
"Austin",
"Ryder",
"Beau",
"Logan",
"Nicholas",
"Caleb",
"Kai",
"Seth",
"Darcy",
"Dylan",
"Nathaniel",
"Angus",
"Zachary",
"Charles",
"Jett",
"Mitchell",
"Bailey",
"Lewis",
"Jax",
"Owen",
"Maxwell",
"Fletcher",
"Louis",
"Declan",
"Spencer",
"Wyatt",
"David",
"Nathan",
"Jasper",
"Phoenix",
"Jesse",
"Ben",
"Jonas",
"Leon",
"Elias",
"Finn",
"Noah",
"Paul",
"Luis",
"Lukas",
"Luca",
"Felix",
"Maximilian",
"Henry",
"Max",
"Emil",
"Moritz",
"Jakob",
"Niklas",
"Tim",
"Julian",
"Oskar",
"Anton",
"Philipp",
"David",
"Liam",
"Alexander",
"Theo",
"Tom",
"Mats",
"Jan",
"Matteo",
"Samuel",
"Erik",
"Fabian",
"Milan",
"Leo",
"Jonathan",
"Rafael",
"Simon",
"Vincent",
"Lennard",
"Carl",
"Linus",
"Hannes",
"Jona",
"Mika",
"Jannik",
"Nico",
"Till",
"Johannes",
"Marlon",
"Leonard",
"Benjamin",
"Johann",
"Mattis",
"Adrian",
"Julius",
"Florian",
"Constantin",
"Daniel",
"Aaron",
"Maxim",
"Nick",
"Lenny",
"Valentin",
"Ole",
"Luke",
"Levi",
"Nils",
"Jannis",
"Sebastian",
"Tobias",
"Marvin",
"Joshua",
"Mohammed",
"Timo",
"Phil",
"Joel",
"Benedikt",
"John",
"Robin",
"Toni",
"Dominic",
"Damian",
"Artur",
"Pepe",
"Lasse",
"Malte",
"Sam",
"Bruno",
"Gabriel",
"Lennox",
"Justus",
"Kilian",
"Theodor",
"Oliver",
"Jamie",
"Levin",
"Lian",
"Noel",
"Noah",
"Liam",
"Luca",
"Gabriel",
"Leon",
"David",
"Matteo",
"Elias",
"Louis",
"Levin",
"Samuel",
"Julian",
"Tim",
"Jonas",
"Robin",
"Diego",
"Nico",
"Leo",
"Jan",
"Ben",
"Leandro",
"Dario",
"Lukas",
"Rafael",
"Elia",
"Nino",
"Simon",
"Lenny",
"Gian",
"Benjamin",
"Alessio",
"Fabio",
"Finn",
"Loris",
"Aaron",
"Daniel",
"Lucas",
"Livio",
"Andrin",
"Nevio",
"Leonardo",
"Alexander",
"Nathan",
"Laurin",
"Lian",
"Mattia",
"Enzo",
"Luis",
"Joel",
"Raphael",
"Nils",
"Valentin",
"Lionel",
"Lars",
"Thomas",
"Arthur",
"Luan",
"Joshua",
"Oliver",
"Maximilian",
"Leano",
"Nicolas",
"Felix",
"Marco",
"Dylan",
"Timo",
"Alessandro",
"Mateo",
"Nolan",
"Fabian",
"Damian",
"Noe",
"Adam",
"Maël",
"Maxime",
"Max",
"Ajan",
"Emil",
"Lio",
"Noel",
"Adrian",
"Levi",
"Leo",
"Lorenzo",
"Ryan",
"Paul",
"Ethan",
"Kevin",
"Jason",
"Hugo",
"Kilian",
"Marlon",
"Jonathan",
"Linus",
"Lorik",
"Moritz",
"Lean",
"Manuel",
"Alex",
"Theo",
"Hugo",
"Daniel",
"Pablo",
"Martin",
"Alejandro",
"Adrian",
"Alvaro",
"David",
"Lucas",
"Mario",
"Diego",
"Manuel",
"Leo",
"Mateo",
"Javier",
"Izan",
"Marcos",
"Alex",
"Sergio",
"Marc",
"Carlos",
"Jorge",
"Miguel",
"Enzo",
"Antonio",
"Angel",
"Gonzalo",
"Iker",
"Juan",
"Eric",
"Ivan",
"Ruben",
"Victor",
"Nicolas",
"Bruno",
"Samuel",
"Hector",
"José",
"Gabriel",
"Dario",
"Oliver",
"Aaron",
"Adam",
"Dylan",
"Jesus",
"Marco",
"Aitor",
"Alberto",
"Guillermo",
"Raul",
"Rodrigo",
"Francisco",
"Joel",
"Erik",
"Pau",
"Pedro",
"Luis",
"Jaime",
"Rafael",
"Asier",
"Unai",
"Mohamed",
"Martí",
"Gael",
"Thiago",
"Ian",
"Fernando",
"Oscar",
"Luca",
"Andres",
"Biel",
"Ismael",
"Alonso",
"Pol",
"Nil",
"Jan",
"Rayan",
"Aleix",
"Arnau",
"Cristian",
"Saul",
"Isaac",
"Santiago",
"Julen",
"Joan",
"Miguel",
"Aimar",
"Ignacio",
"Youssef",
"Eduardo",
"Mauro",
"Enrique",
"Yago",
"José",
"Gerard",
"Abraham",
"Noah",
"Omar",
"Ibai",
"Francisco",
"Francesco",
"Alessandro",
"Lorenzo",
"Andrea",
"Leonardo",
"Mattia",
"Matteo",
"Gabriele",
"Riccardo",
"Tommaso",
"Davide",
"Giuseppe",
"Antonio",
"Federico",
"Edoardo",
"Marco",
"Samuele",
"Diego",
"Giovanni",
"Luca",
"Christian",
"Pietro",
"Simone",
"Nicolo'",
"Filippo",
"Alessio",
"Gabriel",
"Michele",
"Emanuele",
"Jacopo",
"Daniele",
"Cristian",
"Giacomo",
"Vincenzo",
"Salvatore",
"Manuel",
"Gioele",
"Thomas",
"Stefano",
"Giulio",
"Samuel",
"Nicola",
"Giorgio",
"Luigi",
"Daniel",
"Elia",
"Angelo",
"Domenico",
"Paolo",
"Raffaele",
"William",
"Lucas",
"Liam",
"Oscar",
"Elias",
"Hugo",
"Oliver",
"Charlie",
"Axel",
"Vincent",
"Alexander",
"Noah",
"Leo",
"Ludvig",
"Adam",
"Arvid",
"Nils",
"Elliot",
"Filip",
"Leon",
"Melvin",
"Viktor",
"Valter",
"Edvin",
"Benjamin",
"Isak",
"Alfred",
"Theo",
"Emil",
"Harry",
"Olle",
"Love",
"Theodor",
"Anton",
"Sixten",
"Erik",
"Adrian",
"Albin",
"Gustav",
"Melker",
"Malte",
"Ebbe",
"Mohamed",
"Gabriel",
"Alvin",
"Max",
"August",
"Josef",
"Viggo",
"Casper",
"Colin",
"Sam",
"Noel",
"Loke",
"Loui",
"Henry",
"Wilmer",
"Kevin",
"Sigge",
"Vidar",
"Carl",
"Jacob",
"Frank",
"Jonathan",
"Matteo",
"Milton",
"Jack",
"Milo",
"Elton",
"Felix",
"Ville",
"Simon",
"Wilhelm",
"Samuel",
"Vilgot",
"Julian",
"Otto",
"Sebastian",
"John",
"Elis",
"Daniel",
"Ivar",
"Joel",
"Tage",
"David",
"Aron",
"Hjalmar",
"Kian",
"Rasmus",
"Eddie",
"Maximilian",
"Algot",
"Linus",
"Alex",
"Ali",
"Edward",
"Ture",
"Elvin",
"Folke",
"Levi",
"William",
"Mathias",
"Oliver",
"Jakob",
"Lucas",
"Filip",
"Liam",
"Aksel",
"Emil",
"Oskar",
"Markus",
"Theodor",
"Elias",
"Alexander",
"Kasper",
"Magnus",
"Jonas",
"Henrik",
"Noah",
"Isak",
"Tobias",
"Sebastian",
"Sander",
"Kristian",
"Leon",
"Daniel",
"Johannes",
"Benjamin",
"Mathéo",
"Nikolai",
"Martin",
"Adrian",
"Mohammad",
"Olav",
"Ludvig",
"Hakon",
"Theo",
"Victor",
"Johan",
"Sondre",
"Erik",
"Felix",
"Andreas",
"Julian",
"Even",
"Sigurd",
"Jonathan",
"Mikkel",
"Herman",
"Iver",
"Oliver",
"Jack",
"William",
"James",
"Benjamin",
"Mason",
"Hunter",
"Charlie",
"Liam",
"Jacob",
"Noah",
"Thomas",
"Max",
"Lucas",
"George",
"Samuel",
"Ryan",
"Alexander",
"Ethan",
"Cooper",
"Carter",
"Jackson",
"Elijah",
"Leo",
"Lachlan",
"Joshua",
"Blake",
"Daniel",
"Henry",
"Isaac",
"Eli",
"Oscar",
"Joseph",
"Braxton",
"Luca",
"Luke",
"Finn",
"Riley",
"Jayden",
"Beau",
"Harry",
"Harrison",
"Levi",
"Lincoln",
"Connor",
"Archie",
"Jaxon",
"Tyler",
"Toby",
"Dylan",
"Santiago",
"Mateo",
"Leonardo",
"Emiliano",
"Diego",
"Santiago",
"Mateo",
"Juan",
"Matias",
"Nicolas",
"Benjamin",
"Pedro",
"Tomas",
"Thiago",
"Santino",
"Haruto",
"Yuto",
"Sota",
"Yuki",
"Hayato",
"Haruki",
"Ryusei",
"Koki",
"Sora",
"Sosuke",
"Riku",
"Soma",
"Ryota",
"Rui",
"Kaito",
"Haru",
"Kota",
"Yusei",
"Yuito",
"Yuma",
"Ren",
"Takumi",
"Minato",
"Eita",
"Shota",
"Daiki",
"Hiroto",
"Kosei",
"Takeru",
"Hinata",
"Toma",
"Manato",
"Ryuki",
"Rikuto",
"Aoto",
"Ibuki",
"Tatsuki",
"Haruma",
"Yamato",
"Ryuto",
"Taisei",
"Yuta",
"Itsuki",
"Soshi",
"Taiga",
"Kosuke",
"Shoma",
"Yushin",
"Ryuga",
"Ryo",
"Rento",
"John",
"Joshua",
"Christian",
"Justin",
"Daniel",
"James",
"Angelo",
"Mark",
"Nathaniel",
"Adrian"
//"海",
//"かい",
//"かずおき",
//"きょうすけ",
//"京也",
//"きよし",
//"キリト",
//"きわむ",
//"ぎん",
//"くに",
//"くにお",
//"けい",
//"げん",
//"けんと",
//"けんいち",
//"ごう",
//"康一",
//"こうじ",
//"コウジ",
//"こよみ",
//"五郎",
//"カイ",
//"香織",
//"かずね",
//"かずみ",
//"和美",
//"かのん",
//"カリン",
//"きょうこ",
//"杏子",
//"けい",
//"こよみ",
//"ぐり子",
//"くれあ",
//"ここあ",
//"ことり",
//"このみ",
//"小鳩",
//"абаза бызшва",
//"abaza bəzš˚a",
//"Abenaki Alnôba",
//"Abkhaz  аҧсуа бызшәа",
//"Abui",
//"Achang",
//"Bahsa Acèh",
//"Acheron",
//"ís siwa wó disi",
//"Tenánat Hadéyas",
//"Fulfulde",
//"adəgăbză",
//"Adzera",
//"ʿAfár af",
//"Afrikaans",
//"агъул чӀал",
//"Qa'yol",
//"Awajún",
//"Ahom",
//"Waawilûû",
//"akan",
//"Ašval'i mic'i",
//"𒀝𒅗𒁺𒌑",
//"Anicinâbemowin",
//"Ëlsässisch",
//"Алтай тили",
//"ኣማርኛ",
//"мицци",
//"Σάννα",
//"مصري‎",
//"اللغة المصرية الحديثة",
//"تونسي",
//"ရခိုင်ဘာသာ",
//"לשנא ארמיא",
//"ܠܫܢܐ ܤܘܪܝܝܐ",
//"অসমীয়া",
//"къIaваннаб мицци",
//"къарачай-малкъар тил",
//"ბაცბურ მოტტ",
//"বাংলা",
//"бежкьалас миц",
//"भोजपुरी",
//"босански",
//"Буйхалъи мицӏцӏи",
//"Bouyei  Haasqyaix",
//"български",
//"български език",
//"Bundjalung",
//"ဗမာစကား",
//"Нохчийн мотт",
//"廣東話",
//"粵語",
//"东干语",
//"赣语",
//"江西话",
//"客家話",
//"客話",
//"土廣東話",
//"𠊎話",
//"上海闲话",
//"ᑌᓀᓲᒢᕄᓀ",
//"marilenghe",
//"zeneisei",
//"עִבְרִית",
//"كٲشُر",
//"Nama",
//"کوردی",
//"к’öрди",
//"Nedderdüütsch",
//"Neddersassisch",
//"Kajin Majōl",
//"faka-Niue",
//"român",
//"sámegiellaa",
//"sardu",
//"Lallans",
//"Doric",
//"ślůnski",
//"Dene-thah",
//"Dené Dháh",
//"Dene Zhatıé",
//"Spanish español",
//"castellano",
//"toçikī",
//"تاجيكي",
//"Tamahaq Tamahaq",
//"Tyva dyl",
//"Twi twi",
//"Vahcuengh",
//"Zulu"
        };

        string nameComp = nameComponent1[Random.Range(0, nameComponent1.Length)].ToString();
        randomName = nameComp;
    }
}
